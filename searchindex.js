Search.setIndex({"docnames": ["coconut", "coconut.Externals", "coconut.example", "coconut.src", "coconut.src.Core", "coconut.src.Models", "index", "modules"], "filenames": ["coconut.rst", "coconut.Externals.rst", "coconut.example.rst", "coconut.src.rst", "coconut.src.Core.rst", "coconut.src.Models.rst", "index.rst", "modules.rst"], "titles": ["coconut package", "coconut.Externals package", "coconut.example package", "coconut.src package", "coconut.src.Core package", "coconut.src.Models package", "Welcome to COCONUT\u2019s documentation!", "coconut"], "terms": {"extern": [0, 7], "exampl": [0, 7], "src": [0, 7], "core": [0, 3], "basescor": [0, 3], "coiledcoilalignclass": [0, 3], "coiledcoilclass": [0, 3], "extendccclass": [0, 3], "inputclass": [0, 3], "paircoilclass": [0, 3], "scoringclass": [0, 3], "slidingwindowsclass": [0, 3], "ml_predict": [0, 3], "predict_cc": [0, 3], "read_cc_properti": [0, 3], "read_frequency_scor": [0, 3], "test_model_databas": [0, 3], "train_model": [0, 3], "model": [0, 3], "modelclass": [0, 3], "coconutclass": [0, 7], "plot_dimer_length_distribut": [0, 3], "plot_pairwise_distribut": [0, 3], "predict_coiled_coil": [0, 3, 4], "prediction_exampl": [0, 3], "test_coconut_model": [0, 3], "train_coconut_model": [0, 3], "midpointnorm": [0, 3], "vcenter": [0, 3], "invers": [0, 3], "thi": 0, "function": 0, "provid": 0, "number": 0, "basescoresalign": [3, 4], "scoremat": [3, 4], "get_scoremat": [3, 4], "read_matrix_fil": [3, 4], "coiledcoilalign": [3, 4], "basealignmentfil": [3, 4], "constant_scor": [3, 4], "fsseq1": [3, 4], "fsseq2": [3, 4], "pc_prot1_fil": [3, 4], "pc_prot2_fil": [3, 4], "ppath": [3, 4], "prob_cutoff": [3, 4], "prot1": [3, 4], "prot2": [3, 4], "topk": [3, 4], "filter_offdiagonal_seg": [3, 4], "write_topn_align": [3, 4], "add_alignment_scores_segmentdict": [3, 4], "add_sequence_at_cterm": [3, 4], "add_sequence_with_gap": [3, 4], "coconut_align": [3, 4], "create_base_align": [3, 4], "get_hamming_dist": [3, 4], "get_next_segment_list": [3, 4], "get_tracepath_align": [3, 4], "get_tracepath_alignments_fullseq": [3, 4], "k_shortest_path": [3, 4], "load_coiled_coil_segments_ful": [3, 4], "load_paircoil_align": [3, 4], "plot_alignment_seg": [3, 4], "plot_seg": [3, 4], "plot_tre": [3, 4], "plot_tree_simpl": [3, 4], "read_aligned_fasta": [3, 4], "read_coco_alignment_graph": [3, 4], "read_coco_alignment_graph_new": [3, 4], "read_fasta": [3, 4], "segment_traceback": [3, 4], "write_align": [3, 4], "write_alignment_with_heptad": [3, 4], "defaultdictnoadd": [3, 4], "coiledcoil": [3, 4], "cc": [3, 4], "display_cc": [3, 4], "get_cc": [3, 4], "get_num_monom": [3, 4], "set_cc_orient": [3, 4], "set_cc_valu": [3, 4], "extendcoiledcoil": [3, 4], "distdict": [3, 4], "distmat": [3, 4], "p1_pc": [3, 4], "p2_pc": [3, 4], "phep1": [3, 4], "phep2": [3, 4], "prot1_max": [3, 4], "prot1_min": [3, 4], "prot1r": [3, 4], "prot2_max": [3, 4], "prot2_min": [3, 4], "generate_alignments_scor": [3, 4], "sample_plot_combin": [3, 4], "def_valu": [3, 4], "extend_seg": [3, 4], "get_parallel_diagonal_align": [3, 4], "plot_align": [3, 4], "plot_individual_cc_scor": [3, 4], "inputcc": [3, 4], "input_filenam": [3, 4], "interface_dict": [3, 4], "num_monom": [3, 4], "valid_aa": [3, 4], "valid_hep": [3, 4], "check_aa_hep": [3, 4], "check_aa_seq": [3, 4], "check_inp_len": [3, 4], "correct_p_ap_compat": [3, 4], "get_cc_orient": [3, 4], "load_ccdata": [3, 4], "print_input_info": [3, 4], "raise_error": [3, 4], "paircoilpars": [3, 4], "header": [3, 4], "correct_incorrectly_indentified_heptad": [3, 4], "get_heptad_repeats_pair": [3, 4], "get_pc_seq": [3, 4], "hamming_dist": [3, 4], "load_pcoil_align": [3, 4], "load_pcoil_alignment_backup": [3, 4], "write_updated_paircoil_prob": [3, 4], "scorecc": [3, 4], "allprob": [3, 4], "allscor": [3, 4], "ap_prior_prob": [3, 4], "ap_prior_prob_dim": [3, 4], "branching_dict": [3, 4], "d_pred": [3, 4], "d_prob": [3, 4], "d_probs_mean": [3, 4], "distribut": [3, 4], "p_prior_prob": [3, 4], "p_prior_prob_dim": [3, 4], "generate_cc_bayesian_scor": [3, 4], "generate_cc_rf_scor": [3, 4], "generate_cc_scores_bay": [3, 4], "generate_cc_scores_rf": [3, 4], "get_prediction_prob": [3, 4], "get_predict": [3, 4], "predict_cc_st": [3, 4], "score_coiled_coil": [3, 4], "write_bayesian_prob": [3, 4], "write_raw_scor": [3, 4], "calculate_prior_prob": [3, 4], "find_score_ada_ada": [3, 4], "find_score_ada_dad": [3, 4], "find_score_dad_ada": [3, 4], "find_score_dad_dad": [3, 4], "get_b": [3, 4], "get_distribut": [3, 4], "load_prior_prob": [3, 4], "score_dimer_rf": [3, 4], "score_dimer_bayesian": [3, 4], "slidingwindow": [3, 4], "prot1_seq": [3, 4], "prot2_seq": [3, 4], "sw_file_a": [3, 4], "sw_file_d": [3, 4], "swlen": [3, 4], "swlen_d": [3, 4], "get_sliding_window": [3, 4], "write_cc_inputfil": [3, 4], "check_heptad_repeat": [3, 4], "load_dataset": [3, 4], "pred_round": [3, 4], "train_rf_model": [3, 4], "train_rf_models_plot": [3, 4], "train_bayesian_model": [3, 4], "generate_aa_pairs_antiparallel_dim": [3, 4], "generate_aa_pairs_frequ": [3, 4], "generate_aa_pairs_parallel_dim": [3, 4], "generate_hex_pairs_antiparallel_dim": [3, 4], "generate_hex_pairs_dim": [3, 4], "generate_hex_pairs_parallel_dim": [3, 4], "max_normalize_dict": [3, 4], "shifting_align_dim": [3, 4], "total_normalize_dict": [3, 4], "write_unique_hexpair": [3, 4], "load_aa_frequency_scor": [3, 4], "load_aa_frequency_scores_log": [3, 4], "test_model": [3, 4], "bin_valu": [3, 4], "calculate_feature_valu": [3, 4], "check_distribution_pv": [3, 4], "dump_frequency_model": [3, 4], "filter_dim": [3, 4], "generate_dodec_pair": [3, 4], "get_kerneldens": [3, 4], "load_training_data": [3, 4], "load_training_data_singlefil": [3, 4], "read_cc_fil": [3, 4], "read_dodec_pair": [3, 4], "train_kde_model": [3, 4], "write_dict": [3, 4], "hexscor": [3, 5], "rf_model": [3, 5], "rf_paddings": [3, 5], "scoring_dict": [3, 4, 5], "get_kde_model": [3, 5], "get_rf_model": [3, 5], "get_padding_s": [3, 5], "get_scoring_dict": [3, 5], "load_aa_distribut": [3, 5], "load_rf_model": [3, 5], "load_kde_model": [3, 5], "plot_kde_model": [3, 5], "class": [3, 4, 5], "base": [3, 4, 5], "object": [3, 4, 5], "summari": [3, 4, 5], "paramet": [3, 4], "type": [3, 4, 5], "descript": [3, 4, 5], "return": [3, 4, 5], "res_stat": [3, 4], "vmin": 3, "none": [3, 4], "vmax": 3, "clip": 3, "fals": [3, 4], "normal": 3, "valu": [3, 4], "fname": 4, "dict": 4, "prot1_prot2": 4, "float": 4, "int": 4, "segment_dict_ful": 4, "n": 4, "m": 4, "bandwidth1": 4, "bandwidth2": 4, "score_cutoff": 4, "oanam": 4, "topn": 4, "seq1": 4, "seq2": 4, "trace": 4, "trace_seg": 4, "ali1": 4, "ali2": 4, "aliscor": 4, "alignment_fil": 4, "segment": 4, "plotchart": 4, "bool": 4, "option": 4, "tracekei": 4, "kdtree": 4, "segment_data": 4, "align": 4, "sourceid": 4, "targetid": 4, "g": 4, "sourc": 4, "target": 4, "k": 4, "weight": 4, "pc_file": 4, "trace_segmenti": 4, "ax": 4, "lwd": 4, "seg_color": 4, "ssize": 4, "max_depth": 4, "currentid": 4, "outfilenam": 4, "defaultdict": 4, "ccid": 4, "2": 4, "list": [4, 5], "orient": 4, "monomer_idx": 4, "monomer_seq": 4, "monomer_hep": 4, "str": 4, "apflag": 4, "plot_tru": 4, "segments_new": 4, "fileapnam": 4, "figsize1": 4, "6": 4, "3": 4, "fscale": 4, "1": 4, "tupl": 4, "segments_temp": 4, "aa_hep": 4, "aa_seq": 4, "dseq": 4, "dhep": 4, "flag": 4, "probability_typ": 4, "pcoil": 4, "s1": 4, "s2": 4, "resrang": 4, "prob_col": 4, "dimer": 4, "model_obj": 4, "ccdsdir": 4, "input_obj": 4, "outputdir": 4, "aa1": 4, "aa2": 4, "aa3": 4, "aa4": 4, "aascor": 4, "hexpair": 4, "max_hexpairs_length": 4, "0": 4, "18": 4, "prot_seq": 4, "seqhep1": 4, "seqhep2": 4, "hep": 4, "x": 4, "ccddir": 4, "ccnetdir": 4, "ccplotdir": 4, "kfold_cv": 4, "10": 4, "argv": 4, "kei": 4, "v": 4, "realdim": 4, "num_bin": 4, "dodecp": 4, "pval": 4, "ci": 4, "distdir": 4, "min_length_cutoff": 4, "max_length_cutoff": 4, "moddir": 4, "atomdens": 4, "fcolor": 4, "plotdata": 4, "true": 4, "skip_filt": 4, "redundancy_cutoff": 4, "skip_redundancy_check": 4, "dodec_dir": 4, "estm_dir": 4, "plot_dir": 4, "res_pair": 4, "packag": [6, 7], "index": 6, "modul": [6, 7], "search": 6, "page": 6, "subpackag": 7, "content": 7, "submodul": 7, "version": 7}, "objects": {"": [[0, 0, 0, "-", "coconut"]], "coconut": [[1, 0, 0, "-", "Externals"], [2, 0, 0, "-", "example"], [3, 0, 0, "-", "src"], [0, 0, 0, "-", "version"]], "coconut.src": [[3, 0, 0, "-", "CoconutClass"], [4, 0, 0, "-", "Core"], [5, 0, 0, "-", "Models"]], "coconut.src.CoconutClass": [[3, 1, 1, "", "COCONUT"], [3, 1, 1, "", "MidpointNormalize"]], "coconut.src.CoconutClass.COCONUT": [[3, 2, 1, "", "plot_dimer_length_distribution"], [3, 2, 1, "", "plot_pairwise_distributions"], [3, 2, 1, "", "predict_coiled_coil"], [3, 2, 1, "", "prediction_example"], [3, 2, 1, "", "test_coconut_models"], [3, 2, 1, "", "train_coconut_models"]], "coconut.src.CoconutClass.MidpointNormalize": [[3, 2, 1, "", "inverse"], [3, 3, 1, "", "vcenter"]], "coconut.src.Core": [[4, 0, 0, "-", "BaseScores"], [4, 0, 0, "-", "CoiledCoilAlignClass"], [4, 0, 0, "-", "CoiledCoilClass"], [4, 0, 0, "-", "ExtendCCClass"], [4, 0, 0, "-", "InputClass"], [4, 0, 0, "-", "PairCoilClass"], [4, 0, 0, "-", "ScoringClass"], [4, 0, 0, "-", "SlidingWindowsClass"], [4, 0, 0, "-", "ml_prediction"], [4, 0, 0, "-", "predict_cc"], [4, 0, 0, "-", "read_CC_properties"], [4, 0, 0, "-", "read_frequency_scores"], [4, 0, 0, "-", "test_model_database"], [4, 0, 0, "-", "train_models"]], "coconut.src.Core.BaseScores": [[4, 1, 1, "", "BaseScoresAlign"]], "coconut.src.Core.BaseScores.BaseScoresAlign": [[4, 2, 1, "", "get_scoremat"], [4, 2, 1, "", "read_matrix_file"], [4, 3, 1, "", "scoremat"]], "coconut.src.Core.CoiledCoilAlignClass": [[4, 1, 1, "", "CoiledCoilAlign"], [4, 1, 1, "", "DefaultDictNoAdd"]], "coconut.src.Core.CoiledCoilAlignClass.CoiledCoilAlign": [[4, 3, 1, "", "BaseAlignmentFile"], [4, 2, 1, "", "Filter_OffDiagonal_Segments"], [4, 3, 1, "", "PROB_CUTOFF"], [4, 2, 1, "", "Write_Topn_Alignments"], [4, 2, 1, "", "add_alignment_scores_segmentdict"], [4, 2, 1, "", "add_sequence_at_cterm"], [4, 2, 1, "", "add_sequence_with_gaps"], [4, 2, 1, "", "coconut_align"], [4, 3, 1, "", "constant_score"], [4, 2, 1, "", "create_base_alignment"], [4, 3, 1, "", "fsseq1"], [4, 3, 1, "", "fsseq2"], [4, 2, 1, "", "get_hamming_distances"], [4, 2, 1, "", "get_next_segment_lists"], [4, 2, 1, "", "get_tracepath_alignments"], [4, 2, 1, "", "get_tracepath_alignments_fullseq"], [4, 2, 1, "", "k_shortest_paths"], [4, 2, 1, "", "load_Coiled_Coil_Segments_full"], [4, 2, 1, "", "load_paircoil_alignment"], [4, 3, 1, "", "pc_prot1_file"], [4, 3, 1, "", "pc_prot2_file"], [4, 2, 1, "", "plot_alignment_segments"], [4, 2, 1, "", "plot_segments"], [4, 2, 1, "", "plot_tree"], [4, 2, 1, "", "plot_tree_simple"], [4, 3, 1, "", "ppath"], [4, 3, 1, "", "prot1"], [4, 3, 1, "", "prot2"], [4, 2, 1, "", "read_aligned_fasta"], [4, 2, 1, "", "read_coco_alignment_graph"], [4, 2, 1, "", "read_coco_alignment_graph_new"], [4, 2, 1, "", "read_fasta"], [4, 2, 1, "", "segment_traceback"], [4, 3, 1, "", "topk"], [4, 2, 1, "", "write_alignment"], [4, 2, 1, "", "write_alignment_with_heptad"]], "coconut.src.Core.CoiledCoilClass": [[4, 1, 1, "", "CoiledCoil"]], "coconut.src.Core.CoiledCoilClass.CoiledCoil": [[4, 3, 1, "", "CC"], [4, 2, 1, "", "display_CC"], [4, 2, 1, "", "get_CC"], [4, 2, 1, "", "get_num_monomers"], [4, 2, 1, "", "set_CC_orientation"], [4, 2, 1, "", "set_CC_values"]], "coconut.src.Core.ExtendCCClass": [[4, 1, 1, "", "DefaultDictNoAdd"], [4, 1, 1, "", "ExtendCoiledCoil"]], "coconut.src.Core.ExtendCCClass.ExtendCoiledCoil": [[4, 3, 1, "", "DistDict"], [4, 3, 1, "", "DistMat"], [4, 2, 1, "", "Generate_Alignments_Scores"], [4, 3, 1, "", "PROB_CUTOFF"], [4, 2, 1, "", "Sample_Plot_Combine"], [4, 2, 1, "", "def_value"], [4, 2, 1, "", "extend_segment"], [4, 2, 1, "", "get_parallel_diagonal_alignment"], [4, 2, 1, "", "load_paircoil_alignment"], [4, 3, 1, "", "p1_PC"], [4, 3, 1, "", "p2_PC"], [4, 3, 1, "", "pc_prot1_file"], [4, 3, 1, "", "pc_prot2_file"], [4, 3, 1, "", "phep1"], [4, 3, 1, "", "phep2"], [4, 2, 1, "", "plot_alignment"], [4, 2, 1, "", "plot_individual_cc_scores"], [4, 3, 1, "", "ppath"], [4, 3, 1, "", "prot1"], [4, 3, 1, "", "prot1_max"], [4, 3, 1, "", "prot1_min"], [4, 3, 1, "", "prot1res"], [4, 3, 1, "", "prot2"], [4, 3, 1, "", "prot2_max"], [4, 3, 1, "", "prot2_min"]], "coconut.src.Core.InputClass": [[4, 1, 1, "", "InputCC"]], "coconut.src.Core.InputClass.InputCC": [[4, 2, 1, "", "check_aa_hep"], [4, 2, 1, "", "check_aa_seq"], [4, 2, 1, "", "check_inp_len"], [4, 2, 1, "", "correct_P_AP_compatibility"], [4, 2, 1, "", "get_cc_orientation"], [4, 3, 1, "", "input_filename"], [4, 3, 1, "", "interface_dict"], [4, 2, 1, "", "load_CCData"], [4, 3, 1, "", "num_monomers"], [4, 2, 1, "", "print_input_info"], [4, 2, 1, "", "raise_error"], [4, 3, 1, "", "valid_aas"], [4, 3, 1, "", "valid_hep"]], "coconut.src.Core.PairCoilClass": [[4, 1, 1, "", "DefaultDictNoAdd"], [4, 1, 1, "", "PairCoilParse"]], "coconut.src.Core.PairCoilClass.PairCoilParse": [[4, 3, 1, "", "PROB_CUTOFF"], [4, 2, 1, "", "correct_incorrectly_Indentified_heptad"], [4, 2, 1, "", "get_heptad_repeats_pairs"], [4, 2, 1, "", "get_pc_seq"], [4, 2, 1, "", "hamming_distance"], [4, 3, 1, "", "header"], [4, 2, 1, "", "load_Pcoil_alignment"], [4, 2, 1, "", "load_Pcoil_alignment_backup"], [4, 2, 1, "", "load_paircoil_alignment"], [4, 3, 1, "", "p1_PC"], [4, 3, 1, "", "pc_prot1_file"], [4, 3, 1, "", "phep1"], [4, 3, 1, "", "phep2"], [4, 2, 1, "", "write_Updated_Paircoil_Probs"]], "coconut.src.Core.ScoringClass": [[4, 1, 1, "", "ScoreCC"]], "coconut.src.Core.ScoringClass.ScoreCC": [[4, 3, 1, "", "ALLPROBS"], [4, 3, 1, "", "ALLSCORES"], [4, 3, 1, "", "AP_Prior_Prob"], [4, 3, 1, "", "AP_Prior_Prob_dimer"], [4, 3, 1, "", "D_PREDS"], [4, 3, 1, "", "D_PROBS"], [4, 3, 1, "", "D_PROBS_mean"], [4, 3, 1, "", "Distributions"], [4, 2, 1, "", "Generate_CC_Bayesian_Scores"], [4, 2, 1, "", "Generate_CC_RF_Scores"], [4, 2, 1, "", "Generate_CC_Scores_Bayes"], [4, 2, 1, "", "Generate_CC_Scores_RF"], [4, 2, 1, "", "Get_Prediction_Probs"], [4, 2, 1, "", "Get_Predictions"], [4, 3, 1, "", "P_Prior_Prob"], [4, 3, 1, "", "P_Prior_Prob_dimer"], [4, 2, 1, "", "Predict_CC_Stability"], [4, 2, 1, "", "Score_Coiled_coil"], [4, 2, 1, "", "Write_Bayesian_Probabilities"], [4, 2, 1, "", "Write_Raw_Scores"], [4, 3, 1, "", "branching_dict"], [4, 2, 1, "", "calculate_prior_probabilities"], [4, 2, 1, "", "find_score_ada_ada"], [4, 2, 1, "", "find_score_ada_dad"], [4, 2, 1, "", "find_score_dad_ada"], [4, 2, 1, "", "find_score_dad_dad"], [4, 2, 1, "", "get_BS"], [4, 2, 1, "", "get_Distributions"], [4, 2, 1, "", "load_prior_probabilities"], [4, 2, 1, "", "score_dimer_RF"], [4, 2, 1, "", "score_dimer_bayesian"]], "coconut.src.Core.SlidingWindowsClass": [[4, 1, 1, "", "DefaultDictNoAdd"], [4, 1, 1, "", "SlidingWindows"]], "coconut.src.Core.SlidingWindowsClass.SlidingWindows": [[4, 2, 1, "", "Get_Sliding_Windows"], [4, 3, 1, "", "PROB_CUTOFF"], [4, 2, 1, "", "Write_CC_InputFile"], [4, 2, 1, "", "check_heptad_repeat"], [4, 2, 1, "", "load_paircoil_alignment"], [4, 3, 1, "", "pc_prot1_file"], [4, 3, 1, "", "pc_prot2_file"], [4, 3, 1, "", "prot1_seq"], [4, 3, 1, "", "prot2_seq"], [4, 3, 1, "", "sw_file_a"], [4, 3, 1, "", "sw_file_d"], [4, 3, 1, "", "swlen"], [4, 3, 1, "", "swlen_d"]], "coconut.src.Core.ml_prediction": [[4, 4, 1, "", "load_dataset"], [4, 4, 1, "", "pred_round"], [4, 4, 1, "", "train_RF_models"], [4, 4, 1, "", "train_RF_models_plot"], [4, 4, 1, "", "train_bayesian_models"]], "coconut.src.Core.predict_cc": [[4, 4, 1, "", "predict_coiled_coil"]], "coconut.src.Core.read_CC_properties": [[4, 4, 1, "", "check_heptad_repeat"], [4, 4, 1, "", "generate_AA_pairs_antiparallel_dimers"], [4, 4, 1, "", "generate_AA_pairs_frequency"], [4, 4, 1, "", "generate_AA_pairs_parallel_dimers"], [4, 4, 1, "", "generate_Hex_pairs_antiparallel_dimers"], [4, 4, 1, "", "generate_Hex_pairs_dimers"], [4, 4, 1, "", "generate_Hex_pairs_parallel_dimers"], [4, 4, 1, "", "max_normalize_dicts"], [4, 4, 1, "", "shifting_align_dimer"], [4, 4, 1, "", "total_normalize_dicts"], [4, 4, 1, "", "write_unique_hexpairs"]], "coconut.src.Core.read_frequency_scores": [[4, 4, 1, "", "load_AA_Frequency_scores"], [4, 4, 1, "", "load_AA_Frequency_scores_logs"]], "coconut.src.Core.test_model_database": [[4, 4, 1, "", "test_model"]], "coconut.src.Core.train_models": [[4, 4, 1, "", "bin_values"], [4, 4, 1, "", "calculate_feature_values"], [4, 4, 1, "", "check_distribution_pval"], [4, 4, 1, "", "check_heptad_repeat"], [4, 4, 1, "", "dump_frequency_models"], [4, 4, 1, "", "filter_dimer"], [4, 4, 1, "", "generate_dodec_pairs"], [4, 4, 1, "", "get_BS"], [4, 4, 1, "", "get_kerneldensity"], [4, 4, 1, "", "load_training_data"], [4, 4, 1, "", "load_training_data_singlefile"], [4, 4, 1, "", "read_cc_file"], [4, 4, 1, "", "read_dodec_pairs"], [4, 4, 1, "", "train_kde_models"], [4, 4, 1, "", "write_dict"]], "coconut.src.Models": [[5, 0, 0, "-", "ModelClass"]], "coconut.src.Models.ModelClass": [[5, 1, 1, "", "Models"]], "coconut.src.Models.ModelClass.Models": [[5, 3, 1, "", "Hexscores"], [5, 3, 1, "", "RF_Models"], [5, 3, 1, "", "RF_PaddingSize"], [5, 2, 1, "", "get_KDE_Models"], [5, 2, 1, "", "get_RF_Models"], [5, 2, 1, "", "get_padding_size"], [5, 2, 1, "", "get_scoring_dicts"], [5, 2, 1, "", "load_AA_distributions"], [5, 2, 1, "", "load_RF_models"], [5, 2, 1, "", "load_kde_models"], [5, 2, 1, "", "plot_KDE_Models"], [5, 3, 1, "", "scoring_dicts"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"]}, "titleterms": {"coconut": [0, 1, 2, 3, 4, 5, 6, 7], "packag": [0, 1, 2, 3, 4, 5], "subpackag": [0, 3], "submodul": [0, 3, 4, 5], "version": 0, "modul": [0, 1, 2, 3, 4, 5], "content": [0, 1, 2, 3, 4, 5, 6], "extern": 1, "exampl": 2, "src": [3, 4, 5], "coconutclass": 3, "core": 4, "basescor": 4, "coiledcoilalignclass": 4, "coiledcoilclass": 4, "extendccclass": 4, "inputclass": 4, "paircoilclass": 4, "scoringclass": 4, "slidingwindowsclass": 4, "ml_predict": 4, "predict_cc": 4, "read_cc_properti": 4, "read_frequency_scor": 4, "test_model_databas": 4, "train_model": 4, "model": 5, "modelclass": 5, "welcom": 6, "": 6, "document": 6, "indic": 6, "tabl": 6}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"coconut package": [[0, "coconut-package"]], "Subpackages": [[0, "subpackages"], [3, "subpackages"]], "Submodules": [[0, "submodules"], [3, "submodules"], [4, "submodules"], [5, "submodules"]], "coconut.version module": [[0, "module-coconut.version"]], "Module contents": [[0, "module-coconut"], [1, "module-coconut.Externals"], [2, "module-coconut.example"], [3, "module-coconut.src"], [4, "module-coconut.src.Core"], [5, "module-coconut.src.Models"]], "coconut.Externals package": [[1, "coconut-externals-package"]], "coconut.example package": [[2, "coconut-example-package"]], "coconut.src package": [[3, "coconut-src-package"]], "coconut.src.CoconutClass module": [[3, "module-coconut.src.CoconutClass"]], "coconut.src.Core package": [[4, "coconut-src-core-package"]], "coconut.src.Core.BaseScores module": [[4, "module-coconut.src.Core.BaseScores"]], "coconut.src.Core.CoiledCoilAlignClass module": [[4, "module-coconut.src.Core.CoiledCoilAlignClass"]], "coconut.src.Core.CoiledCoilClass module": [[4, "module-coconut.src.Core.CoiledCoilClass"]], "coconut.src.Core.ExtendCCClass module": [[4, "module-coconut.src.Core.ExtendCCClass"]], "coconut.src.Core.InputClass module": [[4, "module-coconut.src.Core.InputClass"]], "coconut.src.Core.PairCoilClass module": [[4, "module-coconut.src.Core.PairCoilClass"]], "coconut.src.Core.ScoringClass module": [[4, "module-coconut.src.Core.ScoringClass"]], "coconut.src.Core.SlidingWindowsClass module": [[4, "module-coconut.src.Core.SlidingWindowsClass"]], "coconut.src.Core.ml_prediction module": [[4, "module-coconut.src.Core.ml_prediction"]], "coconut.src.Core.predict_cc module": [[4, "module-coconut.src.Core.predict_cc"]], "coconut.src.Core.read_CC_properties module": [[4, "module-coconut.src.Core.read_CC_properties"]], "coconut.src.Core.read_frequency_scores module": [[4, "module-coconut.src.Core.read_frequency_scores"]], "coconut.src.Core.test_model_database module": [[4, "module-coconut.src.Core.test_model_database"]], "coconut.src.Core.train_models module": [[4, "module-coconut.src.Core.train_models"]], "coconut.src.Models package": [[5, "coconut-src-models-package"]], "coconut.src.Models.ModelClass module": [[5, "module-coconut.src.Models.ModelClass"]], "Welcome to COCONUT\u2019s documentation!": [[6, "welcome-to-coconut-s-documentation"]], "Contents:": [[6, null]], "Indices and tables": [[6, "indices-and-tables"]], "coconut": [[7, "coconut"]]}, "indexentries": {"coconut": [[0, "module-coconut"]], "coconut.version": [[0, "module-coconut.version"]], "module": [[0, "module-coconut"], [0, "module-coconut.version"], [1, "module-coconut.Externals"], [2, "module-coconut.example"], [3, "module-coconut.src"], [3, "module-coconut.src.CoconutClass"], [4, "module-coconut.src.Core"], [4, "module-coconut.src.Core.BaseScores"], [4, "module-coconut.src.Core.CoiledCoilAlignClass"], [4, "module-coconut.src.Core.CoiledCoilClass"], [4, "module-coconut.src.Core.ExtendCCClass"], [4, "module-coconut.src.Core.InputClass"], [4, "module-coconut.src.Core.PairCoilClass"], [4, "module-coconut.src.Core.ScoringClass"], [4, "module-coconut.src.Core.SlidingWindowsClass"], [4, "module-coconut.src.Core.ml_prediction"], [4, "module-coconut.src.Core.predict_cc"], [4, "module-coconut.src.Core.read_CC_properties"], [4, "module-coconut.src.Core.read_frequency_scores"], [4, "module-coconut.src.Core.test_model_database"], [4, "module-coconut.src.Core.train_models"], [5, "module-coconut.src.Models"], [5, "module-coconut.src.Models.ModelClass"]], "coconut.externals": [[1, "module-coconut.Externals"]], "coconut.example": [[2, "module-coconut.example"]], "coconut (class in coconut.src.coconutclass)": [[3, "coconut.src.CoconutClass.COCONUT"]], "midpointnormalize (class in coconut.src.coconutclass)": [[3, "coconut.src.CoconutClass.MidpointNormalize"]], "coconut.src": [[3, "module-coconut.src"]], "coconut.src.coconutclass": [[3, "module-coconut.src.CoconutClass"]], "inverse() (coconut.src.coconutclass.midpointnormalize method)": [[3, "coconut.src.CoconutClass.MidpointNormalize.inverse"]], "plot_dimer_length_distribution() (coconut.src.coconutclass.coconut method)": [[3, "coconut.src.CoconutClass.COCONUT.plot_dimer_length_distribution"]], "plot_pairwise_distributions() (coconut.src.coconutclass.coconut method)": [[3, "coconut.src.CoconutClass.COCONUT.plot_pairwise_distributions"]], "predict_coiled_coil() (coconut.src.coconutclass.coconut method)": [[3, "coconut.src.CoconutClass.COCONUT.predict_coiled_coil"]], "prediction_example() (coconut.src.coconutclass.coconut method)": [[3, "coconut.src.CoconutClass.COCONUT.prediction_example"]], "test_coconut_models() (coconut.src.coconutclass.coconut method)": [[3, "coconut.src.CoconutClass.COCONUT.test_coconut_models"]], "train_coconut_models() (coconut.src.coconutclass.coconut method)": [[3, "coconut.src.CoconutClass.COCONUT.train_coconut_models"]], "vcenter (coconut.src.coconutclass.midpointnormalize attribute)": [[3, "coconut.src.CoconutClass.MidpointNormalize.vcenter"]], "allprobs (coconut.src.core.scoringclass.scorecc attribute)": [[4, "coconut.src.Core.ScoringClass.ScoreCC.ALLPROBS"]], "allscores (coconut.src.core.scoringclass.scorecc attribute)": [[4, "coconut.src.Core.ScoringClass.ScoreCC.ALLSCORES"]], "ap_prior_prob (coconut.src.core.scoringclass.scorecc attribute)": [[4, "coconut.src.Core.ScoringClass.ScoreCC.AP_Prior_Prob"]], "ap_prior_prob_dimer (coconut.src.core.scoringclass.scorecc attribute)": [[4, "coconut.src.Core.ScoringClass.ScoreCC.AP_Prior_Prob_dimer"]], "basealignmentfile (coconut.src.core.coiledcoilalignclass.coiledcoilalign attribute)": [[4, "coconut.src.Core.CoiledCoilAlignClass.CoiledCoilAlign.BaseAlignmentFile"]], "basescoresalign (class in coconut.src.core.basescores)": [[4, "coconut.src.Core.BaseScores.BaseScoresAlign"]], "cc (coconut.src.core.coiledcoilclass.coiledcoil attribute)": [[4, "coconut.src.Core.CoiledCoilClass.CoiledCoil.CC"]], "coiledcoil (class in coconut.src.core.coiledcoilclass)": [[4, "coconut.src.Core.CoiledCoilClass.CoiledCoil"]], "coiledcoilalign (class in coconut.src.core.coiledcoilalignclass)": [[4, "coconut.src.Core.CoiledCoilAlignClass.CoiledCoilAlign"]], "d_preds (coconut.src.core.scoringclass.scorecc attribute)": [[4, "coconut.src.Core.ScoringClass.ScoreCC.D_PREDS"]], "d_probs (coconut.src.core.scoringclass.scorecc attribute)": [[4, "coconut.src.Core.ScoringClass.ScoreCC.D_PROBS"]], "d_probs_mean (coconut.src.core.scoringclass.scorecc attribute)": [[4, "coconut.src.Core.ScoringClass.ScoreCC.D_PROBS_mean"]], "defaultdictnoadd (class in coconut.src.core.coiledcoilalignclass)": [[4, "coconut.src.Core.CoiledCoilAlignClass.DefaultDictNoAdd"]], "defaultdictnoadd (class in coconut.src.core.extendccclass)": [[4, "coconut.src.Core.ExtendCCClass.DefaultDictNoAdd"]], "defaultdictnoadd (class in coconut.src.core.paircoilclass)": [[4, "coconut.src.Core.PairCoilClass.DefaultDictNoAdd"]], "defaultdictnoadd (class in coconut.src.core.slidingwindowsclass)": [[4, "coconut.src.Core.SlidingWindowsClass.DefaultDictNoAdd"]], "distdict (coconut.src.core.extendccclass.extendcoiledcoil attribute)": [[4, "coconut.src.Core.ExtendCCClass.ExtendCoiledCoil.DistDict"]], "distmat (coconut.src.core.extendccclass.extendcoiledcoil attribute)": [[4, "coconut.src.Core.ExtendCCClass.ExtendCoiledCoil.DistMat"]], "distributions (coconut.src.core.scoringclass.scorecc attribute)": [[4, "coconut.src.Core.ScoringClass.ScoreCC.Distributions"]], "extendcoiledcoil (class in coconut.src.core.extendccclass)": [[4, "coconut.src.Core.ExtendCCClass.ExtendCoiledCoil"]], "filter_offdiagonal_segments() (coconut.src.core.coiledcoilalignclass.coiledcoilalign method)": [[4, "coconut.src.Core.CoiledCoilAlignClass.CoiledCoilAlign.Filter_OffDiagonal_Segments"]], "generate_alignments_scores() (coconut.src.core.extendccclass.extendcoiledcoil method)": [[4, "coconut.src.Core.ExtendCCClass.ExtendCoiledCoil.Generate_Alignments_Scores"]], "generate_cc_bayesian_scores() (coconut.src.core.scoringclass.scorecc method)": [[4, "coconut.src.Core.ScoringClass.ScoreCC.Generate_CC_Bayesian_Scores"]], "generate_cc_rf_scores() (coconut.src.core.scoringclass.scorecc method)": [[4, "coconut.src.Core.ScoringClass.ScoreCC.Generate_CC_RF_Scores"]], "generate_cc_scores_bayes() (coconut.src.core.scoringclass.scorecc method)": [[4, "coconut.src.Core.ScoringClass.ScoreCC.Generate_CC_Scores_Bayes"]], "generate_cc_scores_rf() (coconut.src.core.scoringclass.scorecc method)": [[4, "coconut.src.Core.ScoringClass.ScoreCC.Generate_CC_Scores_RF"]], "get_prediction_probs() (coconut.src.core.scoringclass.scorecc method)": [[4, "coconut.src.Core.ScoringClass.ScoreCC.Get_Prediction_Probs"]], "get_predictions() (coconut.src.core.scoringclass.scorecc method)": [[4, "coconut.src.Core.ScoringClass.ScoreCC.Get_Predictions"]], "get_sliding_windows() (coconut.src.core.slidingwindowsclass.slidingwindows method)": [[4, "coconut.src.Core.SlidingWindowsClass.SlidingWindows.Get_Sliding_Windows"]], "inputcc (class in coconut.src.core.inputclass)": [[4, "coconut.src.Core.InputClass.InputCC"]], "prob_cutoff (coconut.src.core.coiledcoilalignclass.coiledcoilalign attribute)": [[4, "coconut.src.Core.CoiledCoilAlignClass.CoiledCoilAlign.PROB_CUTOFF"]], "prob_cutoff (coconut.src.core.extendccclass.extendcoiledcoil attribute)": [[4, "coconut.src.Core.ExtendCCClass.ExtendCoiledCoil.PROB_CUTOFF"]], "prob_cutoff (coconut.src.core.paircoilclass.paircoilparse attribute)": [[4, "coconut.src.Core.PairCoilClass.PairCoilParse.PROB_CUTOFF"]], "prob_cutoff (coconut.src.core.slidingwindowsclass.slidingwindows attribute)": [[4, "coconut.src.Core.SlidingWindowsClass.SlidingWindows.PROB_CUTOFF"]], "p_prior_prob (coconut.src.core.scoringclass.scorecc attribute)": [[4, "coconut.src.Core.ScoringClass.ScoreCC.P_Prior_Prob"]], "p_prior_prob_dimer (coconut.src.core.scoringclass.scorecc attribute)": [[4, "coconut.src.Core.ScoringClass.ScoreCC.P_Prior_Prob_dimer"]], "paircoilparse (class in coconut.src.core.paircoilclass)": [[4, "coconut.src.Core.PairCoilClass.PairCoilParse"]], "predict_cc_stability() (coconut.src.core.scoringclass.scorecc method)": [[4, "coconut.src.Core.ScoringClass.ScoreCC.Predict_CC_Stability"]], "sample_plot_combine() (coconut.src.core.extendccclass.extendcoiledcoil method)": [[4, "coconut.src.Core.ExtendCCClass.ExtendCoiledCoil.Sample_Plot_Combine"]], "scorecc (class in coconut.src.core.scoringclass)": [[4, "coconut.src.Core.ScoringClass.ScoreCC"]], "score_coiled_coil() (coconut.src.core.scoringclass.scorecc method)": [[4, "coconut.src.Core.ScoringClass.ScoreCC.Score_Coiled_coil"]], "slidingwindows (class in coconut.src.core.slidingwindowsclass)": [[4, "coconut.src.Core.SlidingWindowsClass.SlidingWindows"]], "write_bayesian_probabilities() (coconut.src.core.scoringclass.scorecc method)": [[4, "coconut.src.Core.ScoringClass.ScoreCC.Write_Bayesian_Probabilities"]], "write_cc_inputfile() (coconut.src.core.slidingwindowsclass.slidingwindows method)": [[4, "coconut.src.Core.SlidingWindowsClass.SlidingWindows.Write_CC_InputFile"]], "write_raw_scores() (coconut.src.core.scoringclass.scorecc method)": [[4, "coconut.src.Core.ScoringClass.ScoreCC.Write_Raw_Scores"]], "write_topn_alignments() (coconut.src.core.coiledcoilalignclass.coiledcoilalign method)": [[4, "coconut.src.Core.CoiledCoilAlignClass.CoiledCoilAlign.Write_Topn_Alignments"]], "add_alignment_scores_segmentdict() (coconut.src.core.coiledcoilalignclass.coiledcoilalign method)": [[4, "coconut.src.Core.CoiledCoilAlignClass.CoiledCoilAlign.add_alignment_scores_segmentdict"]], "add_sequence_at_cterm() (coconut.src.core.coiledcoilalignclass.coiledcoilalign method)": [[4, "coconut.src.Core.CoiledCoilAlignClass.CoiledCoilAlign.add_sequence_at_cterm"]], "add_sequence_with_gaps() (coconut.src.core.coiledcoilalignclass.coiledcoilalign method)": [[4, "coconut.src.Core.CoiledCoilAlignClass.CoiledCoilAlign.add_sequence_with_gaps"]], "bin_values() (in module coconut.src.core.train_models)": [[4, "coconut.src.Core.train_models.bin_values"]], "branching_dict (coconut.src.core.scoringclass.scorecc attribute)": [[4, "coconut.src.Core.ScoringClass.ScoreCC.branching_dict"]], "calculate_feature_values() (in module coconut.src.core.train_models)": [[4, "coconut.src.Core.train_models.calculate_feature_values"]], "calculate_prior_probabilities() (coconut.src.core.scoringclass.scorecc method)": [[4, "coconut.src.Core.ScoringClass.ScoreCC.calculate_prior_probabilities"]], "check_aa_hep() (coconut.src.core.inputclass.inputcc method)": [[4, "coconut.src.Core.InputClass.InputCC.check_aa_hep"]], "check_aa_seq() (coconut.src.core.inputclass.inputcc method)": [[4, "coconut.src.Core.InputClass.InputCC.check_aa_seq"]], "check_distribution_pval() (in module coconut.src.core.train_models)": [[4, "coconut.src.Core.train_models.check_distribution_pval"]], "check_heptad_repeat() (coconut.src.core.slidingwindowsclass.slidingwindows method)": [[4, "coconut.src.Core.SlidingWindowsClass.SlidingWindows.check_heptad_repeat"]], "check_heptad_repeat() (in module coconut.src.core.read_cc_properties)": [[4, "coconut.src.Core.read_CC_properties.check_heptad_repeat"]], "check_heptad_repeat() (in module coconut.src.core.train_models)": [[4, "coconut.src.Core.train_models.check_heptad_repeat"]], "check_inp_len() (coconut.src.core.inputclass.inputcc method)": [[4, "coconut.src.Core.InputClass.InputCC.check_inp_len"]], "coconut.src.core": [[4, "module-coconut.src.Core"]], "coconut.src.core.basescores": [[4, "module-coconut.src.Core.BaseScores"]], "coconut.src.core.coiledcoilalignclass": [[4, "module-coconut.src.Core.CoiledCoilAlignClass"]], "coconut.src.core.coiledcoilclass": [[4, "module-coconut.src.Core.CoiledCoilClass"]], "coconut.src.core.extendccclass": [[4, "module-coconut.src.Core.ExtendCCClass"]], "coconut.src.core.inputclass": [[4, "module-coconut.src.Core.InputClass"]], "coconut.src.core.paircoilclass": [[4, "module-coconut.src.Core.PairCoilClass"]], "coconut.src.core.scoringclass": [[4, "module-coconut.src.Core.ScoringClass"]], "coconut.src.core.slidingwindowsclass": [[4, "module-coconut.src.Core.SlidingWindowsClass"]], "coconut.src.core.ml_prediction": [[4, "module-coconut.src.Core.ml_prediction"]], "coconut.src.core.predict_cc": [[4, "module-coconut.src.Core.predict_cc"]], "coconut.src.core.read_cc_properties": [[4, "module-coconut.src.Core.read_CC_properties"]], "coconut.src.core.read_frequency_scores": [[4, "module-coconut.src.Core.read_frequency_scores"]], "coconut.src.core.test_model_database": [[4, "module-coconut.src.Core.test_model_database"]], "coconut.src.core.train_models": [[4, "module-coconut.src.Core.train_models"]], "coconut_align() (coconut.src.core.coiledcoilalignclass.coiledcoilalign method)": [[4, "coconut.src.Core.CoiledCoilAlignClass.CoiledCoilAlign.coconut_align"]], "constant_score (coconut.src.core.coiledcoilalignclass.coiledcoilalign attribute)": [[4, "coconut.src.Core.CoiledCoilAlignClass.CoiledCoilAlign.constant_score"]], "correct_p_ap_compatibility() (coconut.src.core.inputclass.inputcc method)": [[4, "coconut.src.Core.InputClass.InputCC.correct_P_AP_compatibility"]], "correct_incorrectly_indentified_heptad() (coconut.src.core.paircoilclass.paircoilparse method)": [[4, "coconut.src.Core.PairCoilClass.PairCoilParse.correct_incorrectly_Indentified_heptad"]], "create_base_alignment() (coconut.src.core.coiledcoilalignclass.coiledcoilalign method)": [[4, "coconut.src.Core.CoiledCoilAlignClass.CoiledCoilAlign.create_base_alignment"]], "def_value() (coconut.src.core.extendccclass.extendcoiledcoil method)": [[4, "coconut.src.Core.ExtendCCClass.ExtendCoiledCoil.def_value"]], "display_cc() (coconut.src.core.coiledcoilclass.coiledcoil method)": [[4, "coconut.src.Core.CoiledCoilClass.CoiledCoil.display_CC"]], "dump_frequency_models() (in module coconut.src.core.train_models)": [[4, "coconut.src.Core.train_models.dump_frequency_models"]], "extend_segment() (coconut.src.core.extendccclass.extendcoiledcoil method)": [[4, "coconut.src.Core.ExtendCCClass.ExtendCoiledCoil.extend_segment"]], "filter_dimer() (in module coconut.src.core.train_models)": [[4, "coconut.src.Core.train_models.filter_dimer"]], "find_score_ada_ada() (coconut.src.core.scoringclass.scorecc method)": [[4, "coconut.src.Core.ScoringClass.ScoreCC.find_score_ada_ada"]], "find_score_ada_dad() (coconut.src.core.scoringclass.scorecc method)": [[4, "coconut.src.Core.ScoringClass.ScoreCC.find_score_ada_dad"]], "find_score_dad_ada() (coconut.src.core.scoringclass.scorecc method)": [[4, "coconut.src.Core.ScoringClass.ScoreCC.find_score_dad_ada"]], "find_score_dad_dad() (coconut.src.core.scoringclass.scorecc method)": [[4, "coconut.src.Core.ScoringClass.ScoreCC.find_score_dad_dad"]], "fsseq1 (coconut.src.core.coiledcoilalignclass.coiledcoilalign attribute)": [[4, "coconut.src.Core.CoiledCoilAlignClass.CoiledCoilAlign.fsseq1"]], "fsseq2 (coconut.src.core.coiledcoilalignclass.coiledcoilalign attribute)": [[4, "coconut.src.Core.CoiledCoilAlignClass.CoiledCoilAlign.fsseq2"]], "generate_aa_pairs_antiparallel_dimers() (in module coconut.src.core.read_cc_properties)": [[4, "coconut.src.Core.read_CC_properties.generate_AA_pairs_antiparallel_dimers"]], "generate_aa_pairs_frequency() (in module coconut.src.core.read_cc_properties)": [[4, "coconut.src.Core.read_CC_properties.generate_AA_pairs_frequency"]], "generate_aa_pairs_parallel_dimers() (in module coconut.src.core.read_cc_properties)": [[4, "coconut.src.Core.read_CC_properties.generate_AA_pairs_parallel_dimers"]], "generate_hex_pairs_antiparallel_dimers() (in module coconut.src.core.read_cc_properties)": [[4, "coconut.src.Core.read_CC_properties.generate_Hex_pairs_antiparallel_dimers"]], "generate_hex_pairs_dimers() (in module coconut.src.core.read_cc_properties)": [[4, "coconut.src.Core.read_CC_properties.generate_Hex_pairs_dimers"]], "generate_hex_pairs_parallel_dimers() (in module coconut.src.core.read_cc_properties)": [[4, "coconut.src.Core.read_CC_properties.generate_Hex_pairs_parallel_dimers"]], "generate_dodec_pairs() (in module coconut.src.core.train_models)": [[4, "coconut.src.Core.train_models.generate_dodec_pairs"]], "get_bs() (coconut.src.core.scoringclass.scorecc method)": [[4, "coconut.src.Core.ScoringClass.ScoreCC.get_BS"]], "get_bs() (in module coconut.src.core.train_models)": [[4, "coconut.src.Core.train_models.get_BS"]], "get_cc() (coconut.src.core.coiledcoilclass.coiledcoil method)": [[4, "coconut.src.Core.CoiledCoilClass.CoiledCoil.get_CC"]], "get_distributions() (coconut.src.core.scoringclass.scorecc method)": [[4, "coconut.src.Core.ScoringClass.ScoreCC.get_Distributions"]], "get_cc_orientation() (coconut.src.core.inputclass.inputcc method)": [[4, "coconut.src.Core.InputClass.InputCC.get_cc_orientation"]], "get_hamming_distances() (coconut.src.core.coiledcoilalignclass.coiledcoilalign method)": [[4, "coconut.src.Core.CoiledCoilAlignClass.CoiledCoilAlign.get_hamming_distances"]], "get_heptad_repeats_pairs() (coconut.src.core.paircoilclass.paircoilparse method)": [[4, "coconut.src.Core.PairCoilClass.PairCoilParse.get_heptad_repeats_pairs"]], "get_kerneldensity() (in module coconut.src.core.train_models)": [[4, "coconut.src.Core.train_models.get_kerneldensity"]], "get_next_segment_lists() (coconut.src.core.coiledcoilalignclass.coiledcoilalign method)": [[4, "coconut.src.Core.CoiledCoilAlignClass.CoiledCoilAlign.get_next_segment_lists"]], "get_num_monomers() (coconut.src.core.coiledcoilclass.coiledcoil method)": [[4, "coconut.src.Core.CoiledCoilClass.CoiledCoil.get_num_monomers"]], "get_parallel_diagonal_alignment() (coconut.src.core.extendccclass.extendcoiledcoil method)": [[4, "coconut.src.Core.ExtendCCClass.ExtendCoiledCoil.get_parallel_diagonal_alignment"]], "get_pc_seq() (coconut.src.core.paircoilclass.paircoilparse method)": [[4, "coconut.src.Core.PairCoilClass.PairCoilParse.get_pc_seq"]], "get_scoremat() (coconut.src.core.basescores.basescoresalign method)": [[4, "coconut.src.Core.BaseScores.BaseScoresAlign.get_scoremat"]], "get_tracepath_alignments() (coconut.src.core.coiledcoilalignclass.coiledcoilalign method)": [[4, "coconut.src.Core.CoiledCoilAlignClass.CoiledCoilAlign.get_tracepath_alignments"]], "get_tracepath_alignments_fullseq() (coconut.src.core.coiledcoilalignclass.coiledcoilalign method)": [[4, "coconut.src.Core.CoiledCoilAlignClass.CoiledCoilAlign.get_tracepath_alignments_fullseq"]], "hamming_distance() (coconut.src.core.paircoilclass.paircoilparse method)": [[4, "coconut.src.Core.PairCoilClass.PairCoilParse.hamming_distance"]], "header (coconut.src.core.paircoilclass.paircoilparse attribute)": [[4, "coconut.src.Core.PairCoilClass.PairCoilParse.header"]], "input_filename (coconut.src.core.inputclass.inputcc attribute)": [[4, "coconut.src.Core.InputClass.InputCC.input_filename"]], "interface_dict (coconut.src.core.inputclass.inputcc attribute)": [[4, "coconut.src.Core.InputClass.InputCC.interface_dict"]], "k_shortest_paths() (coconut.src.core.coiledcoilalignclass.coiledcoilalign method)": [[4, "coconut.src.Core.CoiledCoilAlignClass.CoiledCoilAlign.k_shortest_paths"]], "load_aa_frequency_scores() (in module coconut.src.core.read_frequency_scores)": [[4, "coconut.src.Core.read_frequency_scores.load_AA_Frequency_scores"]], "load_aa_frequency_scores_logs() (in module coconut.src.core.read_frequency_scores)": [[4, "coconut.src.Core.read_frequency_scores.load_AA_Frequency_scores_logs"]], "load_ccdata() (coconut.src.core.inputclass.inputcc method)": [[4, "coconut.src.Core.InputClass.InputCC.load_CCData"]], "load_coiled_coil_segments_full() (coconut.src.core.coiledcoilalignclass.coiledcoilalign method)": [[4, "coconut.src.Core.CoiledCoilAlignClass.CoiledCoilAlign.load_Coiled_Coil_Segments_full"]], "load_pcoil_alignment() (coconut.src.core.paircoilclass.paircoilparse method)": [[4, "coconut.src.Core.PairCoilClass.PairCoilParse.load_Pcoil_alignment"]], "load_pcoil_alignment_backup() (coconut.src.core.paircoilclass.paircoilparse method)": [[4, "coconut.src.Core.PairCoilClass.PairCoilParse.load_Pcoil_alignment_backup"]], "load_dataset() (in module coconut.src.core.ml_prediction)": [[4, "coconut.src.Core.ml_prediction.load_dataset"]], "load_paircoil_alignment() (coconut.src.core.coiledcoilalignclass.coiledcoilalign method)": [[4, "coconut.src.Core.CoiledCoilAlignClass.CoiledCoilAlign.load_paircoil_alignment"]], "load_paircoil_alignment() (coconut.src.core.extendccclass.extendcoiledcoil method)": [[4, "coconut.src.Core.ExtendCCClass.ExtendCoiledCoil.load_paircoil_alignment"]], "load_paircoil_alignment() (coconut.src.core.paircoilclass.paircoilparse method)": [[4, "coconut.src.Core.PairCoilClass.PairCoilParse.load_paircoil_alignment"]], "load_paircoil_alignment() (coconut.src.core.slidingwindowsclass.slidingwindows method)": [[4, "coconut.src.Core.SlidingWindowsClass.SlidingWindows.load_paircoil_alignment"]], "load_prior_probabilities() (coconut.src.core.scoringclass.scorecc method)": [[4, "coconut.src.Core.ScoringClass.ScoreCC.load_prior_probabilities"]], "load_training_data() (in module coconut.src.core.train_models)": [[4, "coconut.src.Core.train_models.load_training_data"]], "load_training_data_singlefile() (in module coconut.src.core.train_models)": [[4, "coconut.src.Core.train_models.load_training_data_singlefile"]], "max_normalize_dicts() (in module coconut.src.core.read_cc_properties)": [[4, "coconut.src.Core.read_CC_properties.max_normalize_dicts"]], "num_monomers (coconut.src.core.inputclass.inputcc attribute)": [[4, "coconut.src.Core.InputClass.InputCC.num_monomers"]], "p1_pc (coconut.src.core.extendccclass.extendcoiledcoil attribute)": [[4, "coconut.src.Core.ExtendCCClass.ExtendCoiledCoil.p1_PC"]], "p1_pc (coconut.src.core.paircoilclass.paircoilparse attribute)": [[4, "coconut.src.Core.PairCoilClass.PairCoilParse.p1_PC"]], "p2_pc (coconut.src.core.extendccclass.extendcoiledcoil attribute)": [[4, "coconut.src.Core.ExtendCCClass.ExtendCoiledCoil.p2_PC"]], "pc_prot1_file (coconut.src.core.coiledcoilalignclass.coiledcoilalign attribute)": [[4, "coconut.src.Core.CoiledCoilAlignClass.CoiledCoilAlign.pc_prot1_file"]], "pc_prot1_file (coconut.src.core.extendccclass.extendcoiledcoil attribute)": [[4, "coconut.src.Core.ExtendCCClass.ExtendCoiledCoil.pc_prot1_file"]], "pc_prot1_file (coconut.src.core.paircoilclass.paircoilparse attribute)": [[4, "coconut.src.Core.PairCoilClass.PairCoilParse.pc_prot1_file"]], "pc_prot1_file (coconut.src.core.slidingwindowsclass.slidingwindows attribute)": [[4, "coconut.src.Core.SlidingWindowsClass.SlidingWindows.pc_prot1_file"]], "pc_prot2_file (coconut.src.core.coiledcoilalignclass.coiledcoilalign attribute)": [[4, "coconut.src.Core.CoiledCoilAlignClass.CoiledCoilAlign.pc_prot2_file"]], "pc_prot2_file (coconut.src.core.extendccclass.extendcoiledcoil attribute)": [[4, "coconut.src.Core.ExtendCCClass.ExtendCoiledCoil.pc_prot2_file"]], "pc_prot2_file (coconut.src.core.slidingwindowsclass.slidingwindows attribute)": [[4, "coconut.src.Core.SlidingWindowsClass.SlidingWindows.pc_prot2_file"]], "phep1 (coconut.src.core.extendccclass.extendcoiledcoil attribute)": [[4, "coconut.src.Core.ExtendCCClass.ExtendCoiledCoil.phep1"]], "phep1 (coconut.src.core.paircoilclass.paircoilparse attribute)": [[4, "coconut.src.Core.PairCoilClass.PairCoilParse.phep1"]], "phep2 (coconut.src.core.extendccclass.extendcoiledcoil attribute)": [[4, "coconut.src.Core.ExtendCCClass.ExtendCoiledCoil.phep2"]], "phep2 (coconut.src.core.paircoilclass.paircoilparse attribute)": [[4, "coconut.src.Core.PairCoilClass.PairCoilParse.phep2"]], "plot_alignment() (coconut.src.core.extendccclass.extendcoiledcoil method)": [[4, "coconut.src.Core.ExtendCCClass.ExtendCoiledCoil.plot_alignment"]], "plot_alignment_segments() (coconut.src.core.coiledcoilalignclass.coiledcoilalign method)": [[4, "coconut.src.Core.CoiledCoilAlignClass.CoiledCoilAlign.plot_alignment_segments"]], "plot_individual_cc_scores() (coconut.src.core.extendccclass.extendcoiledcoil method)": [[4, "coconut.src.Core.ExtendCCClass.ExtendCoiledCoil.plot_individual_cc_scores"]], "plot_segments() (coconut.src.core.coiledcoilalignclass.coiledcoilalign method)": [[4, "coconut.src.Core.CoiledCoilAlignClass.CoiledCoilAlign.plot_segments"]], "plot_tree() (coconut.src.core.coiledcoilalignclass.coiledcoilalign method)": [[4, "coconut.src.Core.CoiledCoilAlignClass.CoiledCoilAlign.plot_tree"]], "plot_tree_simple() (coconut.src.core.coiledcoilalignclass.coiledcoilalign method)": [[4, "coconut.src.Core.CoiledCoilAlignClass.CoiledCoilAlign.plot_tree_simple"]], "ppath (coconut.src.core.coiledcoilalignclass.coiledcoilalign attribute)": [[4, "coconut.src.Core.CoiledCoilAlignClass.CoiledCoilAlign.ppath"]], "ppath (coconut.src.core.extendccclass.extendcoiledcoil attribute)": [[4, "coconut.src.Core.ExtendCCClass.ExtendCoiledCoil.ppath"]], "pred_round() (in module coconut.src.core.ml_prediction)": [[4, "coconut.src.Core.ml_prediction.pred_round"]], "predict_coiled_coil() (in module coconut.src.core.predict_cc)": [[4, "coconut.src.Core.predict_cc.predict_coiled_coil"]], "print_input_info() (coconut.src.core.inputclass.inputcc method)": [[4, "coconut.src.Core.InputClass.InputCC.print_input_info"]], "prot1 (coconut.src.core.coiledcoilalignclass.coiledcoilalign attribute)": [[4, "coconut.src.Core.CoiledCoilAlignClass.CoiledCoilAlign.prot1"]], "prot1 (coconut.src.core.extendccclass.extendcoiledcoil attribute)": [[4, "coconut.src.Core.ExtendCCClass.ExtendCoiledCoil.prot1"]], "prot1_max (coconut.src.core.extendccclass.extendcoiledcoil attribute)": [[4, "coconut.src.Core.ExtendCCClass.ExtendCoiledCoil.prot1_max"]], "prot1_min (coconut.src.core.extendccclass.extendcoiledcoil attribute)": [[4, "coconut.src.Core.ExtendCCClass.ExtendCoiledCoil.prot1_min"]], "prot1_seq (coconut.src.core.slidingwindowsclass.slidingwindows attribute)": [[4, "coconut.src.Core.SlidingWindowsClass.SlidingWindows.prot1_seq"]], "prot1res (coconut.src.core.extendccclass.extendcoiledcoil attribute)": [[4, "coconut.src.Core.ExtendCCClass.ExtendCoiledCoil.prot1res"]], "prot2 (coconut.src.core.coiledcoilalignclass.coiledcoilalign attribute)": [[4, "coconut.src.Core.CoiledCoilAlignClass.CoiledCoilAlign.prot2"]], "prot2 (coconut.src.core.extendccclass.extendcoiledcoil attribute)": [[4, "coconut.src.Core.ExtendCCClass.ExtendCoiledCoil.prot2"]], "prot2_max (coconut.src.core.extendccclass.extendcoiledcoil attribute)": [[4, "coconut.src.Core.ExtendCCClass.ExtendCoiledCoil.prot2_max"]], "prot2_min (coconut.src.core.extendccclass.extendcoiledcoil attribute)": [[4, "coconut.src.Core.ExtendCCClass.ExtendCoiledCoil.prot2_min"]], "prot2_seq (coconut.src.core.slidingwindowsclass.slidingwindows attribute)": [[4, "coconut.src.Core.SlidingWindowsClass.SlidingWindows.prot2_seq"]], "raise_error() (coconut.src.core.inputclass.inputcc method)": [[4, "coconut.src.Core.InputClass.InputCC.raise_error"]], "read_aligned_fasta() (coconut.src.core.coiledcoilalignclass.coiledcoilalign method)": [[4, "coconut.src.Core.CoiledCoilAlignClass.CoiledCoilAlign.read_aligned_fasta"]], "read_cc_file() (in module coconut.src.core.train_models)": [[4, "coconut.src.Core.train_models.read_cc_file"]], "read_coco_alignment_graph() (coconut.src.core.coiledcoilalignclass.coiledcoilalign method)": [[4, "coconut.src.Core.CoiledCoilAlignClass.CoiledCoilAlign.read_coco_alignment_graph"]], "read_coco_alignment_graph_new() (coconut.src.core.coiledcoilalignclass.coiledcoilalign method)": [[4, "coconut.src.Core.CoiledCoilAlignClass.CoiledCoilAlign.read_coco_alignment_graph_new"]], "read_dodec_pairs() (in module coconut.src.core.train_models)": [[4, "coconut.src.Core.train_models.read_dodec_pairs"]], "read_fasta() (coconut.src.core.coiledcoilalignclass.coiledcoilalign method)": [[4, "coconut.src.Core.CoiledCoilAlignClass.CoiledCoilAlign.read_fasta"]], "read_matrix_file() (coconut.src.core.basescores.basescoresalign method)": [[4, "coconut.src.Core.BaseScores.BaseScoresAlign.read_matrix_file"]], "score_dimer_rf() (coconut.src.core.scoringclass.scorecc method)": [[4, "coconut.src.Core.ScoringClass.ScoreCC.score_dimer_RF"]], "score_dimer_bayesian() (coconut.src.core.scoringclass.scorecc method)": [[4, "coconut.src.Core.ScoringClass.ScoreCC.score_dimer_bayesian"]], "scoremat (coconut.src.core.basescores.basescoresalign attribute)": [[4, "coconut.src.Core.BaseScores.BaseScoresAlign.scoremat"]], "segment_traceback() (coconut.src.core.coiledcoilalignclass.coiledcoilalign method)": [[4, "coconut.src.Core.CoiledCoilAlignClass.CoiledCoilAlign.segment_traceback"]], "set_cc_orientation() (coconut.src.core.coiledcoilclass.coiledcoil method)": [[4, "coconut.src.Core.CoiledCoilClass.CoiledCoil.set_CC_orientation"]], "set_cc_values() (coconut.src.core.coiledcoilclass.coiledcoil method)": [[4, "coconut.src.Core.CoiledCoilClass.CoiledCoil.set_CC_values"]], "shifting_align_dimer() (in module coconut.src.core.read_cc_properties)": [[4, "coconut.src.Core.read_CC_properties.shifting_align_dimer"]], "sw_file_a (coconut.src.core.slidingwindowsclass.slidingwindows attribute)": [[4, "coconut.src.Core.SlidingWindowsClass.SlidingWindows.sw_file_a"]], "sw_file_d (coconut.src.core.slidingwindowsclass.slidingwindows attribute)": [[4, "coconut.src.Core.SlidingWindowsClass.SlidingWindows.sw_file_d"]], "swlen (coconut.src.core.slidingwindowsclass.slidingwindows attribute)": [[4, "coconut.src.Core.SlidingWindowsClass.SlidingWindows.swlen"]], "swlen_d (coconut.src.core.slidingwindowsclass.slidingwindows attribute)": [[4, "coconut.src.Core.SlidingWindowsClass.SlidingWindows.swlen_d"]], "test_model() (in module coconut.src.core.test_model_database)": [[4, "coconut.src.Core.test_model_database.test_model"]], "topk (coconut.src.core.coiledcoilalignclass.coiledcoilalign attribute)": [[4, "coconut.src.Core.CoiledCoilAlignClass.CoiledCoilAlign.topk"]], "total_normalize_dicts() (in module coconut.src.core.read_cc_properties)": [[4, "coconut.src.Core.read_CC_properties.total_normalize_dicts"]], "train_rf_models() (in module coconut.src.core.ml_prediction)": [[4, "coconut.src.Core.ml_prediction.train_RF_models"]], "train_rf_models_plot() (in module coconut.src.core.ml_prediction)": [[4, "coconut.src.Core.ml_prediction.train_RF_models_plot"]], "train_bayesian_models() (in module coconut.src.core.ml_prediction)": [[4, "coconut.src.Core.ml_prediction.train_bayesian_models"]], "train_kde_models() (in module coconut.src.core.train_models)": [[4, "coconut.src.Core.train_models.train_kde_models"]], "valid_aas (coconut.src.core.inputclass.inputcc attribute)": [[4, "coconut.src.Core.InputClass.InputCC.valid_aas"]], "valid_hep (coconut.src.core.inputclass.inputcc attribute)": [[4, "coconut.src.Core.InputClass.InputCC.valid_hep"]], "write_updated_paircoil_probs() (coconut.src.core.paircoilclass.paircoilparse method)": [[4, "coconut.src.Core.PairCoilClass.PairCoilParse.write_Updated_Paircoil_Probs"]], "write_alignment() (coconut.src.core.coiledcoilalignclass.coiledcoilalign method)": [[4, "coconut.src.Core.CoiledCoilAlignClass.CoiledCoilAlign.write_alignment"]], "write_alignment_with_heptad() (coconut.src.core.coiledcoilalignclass.coiledcoilalign method)": [[4, "coconut.src.Core.CoiledCoilAlignClass.CoiledCoilAlign.write_alignment_with_heptad"]], "write_dict() (in module coconut.src.core.train_models)": [[4, "coconut.src.Core.train_models.write_dict"]], "write_unique_hexpairs() (in module coconut.src.core.read_cc_properties)": [[4, "coconut.src.Core.read_CC_properties.write_unique_hexpairs"]], "hexscores (coconut.src.models.modelclass.models attribute)": [[5, "coconut.src.Models.ModelClass.Models.Hexscores"]], "models (class in coconut.src.models.modelclass)": [[5, "coconut.src.Models.ModelClass.Models"]], "rf_models (coconut.src.models.modelclass.models attribute)": [[5, "coconut.src.Models.ModelClass.Models.RF_Models"]], "rf_paddingsize (coconut.src.models.modelclass.models attribute)": [[5, "coconut.src.Models.ModelClass.Models.RF_PaddingSize"]], "coconut.src.models": [[5, "module-coconut.src.Models"]], "coconut.src.models.modelclass": [[5, "module-coconut.src.Models.ModelClass"]], "get_kde_models() (coconut.src.models.modelclass.models method)": [[5, "coconut.src.Models.ModelClass.Models.get_KDE_Models"]], "get_rf_models() (coconut.src.models.modelclass.models method)": [[5, "coconut.src.Models.ModelClass.Models.get_RF_Models"]], "get_padding_size() (coconut.src.models.modelclass.models method)": [[5, "coconut.src.Models.ModelClass.Models.get_padding_size"]], "get_scoring_dicts() (coconut.src.models.modelclass.models method)": [[5, "coconut.src.Models.ModelClass.Models.get_scoring_dicts"]], "load_aa_distributions() (coconut.src.models.modelclass.models method)": [[5, "coconut.src.Models.ModelClass.Models.load_AA_distributions"]], "load_rf_models() (coconut.src.models.modelclass.models method)": [[5, "coconut.src.Models.ModelClass.Models.load_RF_models"]], "load_kde_models() (coconut.src.models.modelclass.models method)": [[5, "coconut.src.Models.ModelClass.Models.load_kde_models"]], "plot_kde_models() (coconut.src.models.modelclass.models method)": [[5, "coconut.src.Models.ModelClass.Models.plot_KDE_Models"]], "scoring_dicts (coconut.src.models.modelclass.models attribute)": [[5, "coconut.src.Models.ModelClass.Models.scoring_dicts"]]}})